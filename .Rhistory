geom_point(data=other, aes(x = date, y = category_pt, color = "Pink"), size=1.5) +
geom_line(data=other, aes(x = date, y = category_pt, color = "Pink")) +
geom_point(data=total, aes(x = date, y = category_pt, color = "turquoise"), size=1.5) +
geom_line(data=total, aes(x = date, y = category_pt, color = "turquoise")) +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="patient number", limits = c(0,10000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values=c("Black", "Blue", "Red", "Green", "Purple", "Brown", "Gray", "Orange", "Pink","turquoise"),
labels=c("Peni", "Cepha", "Tetra", "Amino", "Amphe", "Glyco", "Keto", "Macro", "Other","Total")) +
theme_gray(20) +
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=peni, aes(x = date, y = category_pres)) +
geom_point(aes(color="Black"), size=1.5) +
geom_line(aes(color="Black")) +
geom_point(data=cepha, aes(x = date, y = category_pres, color = "Blue"), size=1.5) +
geom_line(data=cepha, aes(x = date, y = category_pres, color = "Blue")) +
geom_point(data=tetra, aes(x = date, y = category_pres, color = "Red"), size=1.5) +
geom_line(data=tetra, aes(x = date, y = category_pres, color = "Red")) +
geom_point(data=amino, aes(x = date, y = category_pres, color = "Green"), size=1.5) +
geom_line(data=amino, aes(x = date, y = category_pres, color = "Green")) +
geom_point(data=amphe, aes(x = date, y = category_pres, color = "Purple"), size=1.5) +
geom_line(data=amphe, aes(x = date, y = category_pres, color = "Purple")) +
geom_point(data=glyco, aes(x = date, y = category_pres, color = "Brown"), size=1.5) +
geom_line(data=glyco, aes(x = date, y = category_pres, color = "Brown")) +
geom_point(data=keto, aes(x = date, y = category_pres, color = "Gray"), size=1.5) +
geom_line(data=keto, aes(x = date, y = category_pres, color = "Gray")) +
geom_point(data=macro, aes(x = date, y = category_pres, color = "Orange"), size=1.5) +
geom_line(data=macro, aes(x = date, y = category_pres, color = "Orange")) +
geom_point(data=other, aes(x = date, y = category_pres, color = "Pink"), size=1.5) +
geom_line(data=other, aes(x = date, y = category_pres, color = "Pink")) +
geom_point(data=total, aes(x = date, y = category_pres, color = "turquoise"), size=1.5) +
geom_line(data=total, aes(x = date, y = category_pres, color = "turquoise")) +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="prescription number", limits = c(0,13000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values=c("Black", "Blue", "Red", "Green", "Purple", "Brown", "Gray", "Orange", "Pink","turquoise"),
labels=c("Peni", "Cepha", "Tetra", "Amino", "Amphe", "Glyco", "Keto", "Macro", "Other","Total")) +
theme_gray(20) +
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
#패키지지
library(tidyverse)
library(ggplot2)
library(lubridate)
View(medicine_result_anti_hos2)
library(lubridate)
#각 성분별 분류
##병원내 IN 항생제 분류
IN_peni <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "penicillins")
View(IN_peni)
View(medicine_result_anti_hos2)
IN_peni <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Penicillins")
library(tidyverse)
library(ggplot2)
library(lubridate)
IN_peni <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Penicillins")
View(IN_peni)
ggplot(data=IN_peni, aes(x = date, y = category_pt)) +
geom_point(color="black", size=1.5) +
geom_line(color="black") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1500000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=IN_peni, aes(x = date, y = category_pt)) +
geom_point(color="black", size=1.5) +
geom_line(color="black") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,100000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=IN_peni, aes(x = date, y = category_pt)) +
geom_point(color="black", size=1.5) +
geom_line(color="black") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,50000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##total
anti <- medicine_result_anti %>%
group_by(USE_YEAR,USE_MONTH) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt))
#성분별 그래프
##전체
ggplot(data=peni, aes(x = date, y = category_pt)) +
geom_point(aes(color="Black"), size=1.5) +
geom_line(aes(color="Black")) +
geom_point(data=cepha, aes(x = date, y = category_pt, color = "Blue"), size=1.5) +
geom_line(data=cepha, aes(x = date, y = category_pt, color = "Blue")) +
geom_point(data=tetra, aes(x = date, y = category_pt, color = "Red"), size=1.5) +
geom_line(data=tetra, aes(x = date, y = category_pt, color = "Red")) +
geom_point(data=amino, aes(x = date, y = category_pt, color = "Green"), size=1.5) +
geom_line(data=amino, aes(x = date, y = category_pt, color = "Green")) +
geom_point(data=amphe, aes(x = date, y = category_pt, color = "Purple"), size=1.5) +
geom_line(data=amphe, aes(x = date, y = category_pt, color = "Purple")) +
geom_point(data=glyco, aes(x = date, y = category_pt, color = "Brown"), size=1.5) +
geom_line(data=glyco, aes(x = date, y = category_pt, color = "Brown")) +
geom_point(data=keto, aes(x = date, y = category_pt, color = "Gray"), size=1.5) +
geom_line(data=keto, aes(x = date, y = category_pt, color = "Gray")) +
geom_point(data=macro, aes(x = date, y = category_pt, color = "Orange"), size=1.5) +
geom_line(data=macro, aes(x = date, y = category_pt, color = "Orange")) +
geom_point(data=other, aes(x = date, y = category_pt, color = "Pink"), size=1.5) +
geom_line(data=other, aes(x = date, y = category_pt, color = "Pink")) +
geom_point(data=anti, aes(x = date, y = category_pt, color = "turquoise"), size=1.5) +
geom_line(data=anti, aes(x = date, y = category_pt, color = "turquoise")) +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="patient number", limits = c(0,10000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values=c("Black", "Blue", "Red", "Green", "Purple", "Brown", "Gray", "Orange", "Pink","turquoise"),
labels=c("Peni", "Cepha", "Tetra", "Amino", "Amphe", "Glyco", "Keto", "Macro", "Other","Total(anti)")) +
theme_gray(20) +
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
###각 성분별 분류
{
##total
anti <- medicine_result_anti %>%
group_by(USE_YEAR,USE_MONTH) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt))
#날짜 만들기
total$date = paste0(total$USE_YEAR,total$USE_MONTH)
total$date <- as.Date(paste(as.character(total$date), '01'), format='%Y%m%d')
##penicillin
peni <- medicine_result_anti2 %>%
filter(category == "Penicillins")
##Cephalosporins
cepha <- medicine_result_anti2 %>%
filter(category == "Cephalosporins")
##Tetracyclines
tetra <- medicine_result_anti2 %>%
filter(category == "Tetracyclines")
##Macrolides
macro <- medicine_result_anti2 %>%
filter(category == "Macrolides")
##Glycopeptides
glyco <- medicine_result_anti2 %>%
filter(category == "Glycopeptides")
##Aminoglycosides
amino <- medicine_result_anti2 %>%
filter(category == "Aminoglycosides")
##Amphenicols
amphe <- medicine_result_anti2 %>%
filter(category == "Amphenicols")
##Ketolides
keto <- medicine_result_anti2 %>%
filter(category == "Ketolides")
##other
other <- medicine_result_anti2 %>%
filter(category == "Other")
}
####그래프 - pt ----
options(scipen = 5) #과학적 스케일 적용
#성분별 그래프
##전체
ggplot(data=peni, aes(x = date, y = category_pt)) +
geom_point(aes(color="Black"), size=1.5) +
geom_line(aes(color="Black")) +
geom_point(data=cepha, aes(x = date, y = category_pt, color = "Blue"), size=1.5) +
geom_line(data=cepha, aes(x = date, y = category_pt, color = "Blue")) +
geom_point(data=tetra, aes(x = date, y = category_pt, color = "Red"), size=1.5) +
geom_line(data=tetra, aes(x = date, y = category_pt, color = "Red")) +
geom_point(data=amino, aes(x = date, y = category_pt, color = "Green"), size=1.5) +
geom_line(data=amino, aes(x = date, y = category_pt, color = "Green")) +
geom_point(data=amphe, aes(x = date, y = category_pt, color = "Purple"), size=1.5) +
geom_line(data=amphe, aes(x = date, y = category_pt, color = "Purple")) +
geom_point(data=glyco, aes(x = date, y = category_pt, color = "Brown"), size=1.5) +
geom_line(data=glyco, aes(x = date, y = category_pt, color = "Brown")) +
geom_point(data=keto, aes(x = date, y = category_pt, color = "Gray"), size=1.5) +
geom_line(data=keto, aes(x = date, y = category_pt, color = "Gray")) +
geom_point(data=macro, aes(x = date, y = category_pt, color = "Orange"), size=1.5) +
geom_line(data=macro, aes(x = date, y = category_pt, color = "Orange")) +
geom_point(data=other, aes(x = date, y = category_pt, color = "Pink"), size=1.5) +
geom_line(data=other, aes(x = date, y = category_pt, color = "Pink")) +
geom_point(data=anti, aes(x = date, y = category_pt, color = "turquoise"), size=1.5) +
geom_line(data=anti, aes(x = date, y = category_pt, color = "turquoise")) +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="patient number", limits = c(0,10000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values=c("Black", "Blue", "Red", "Green", "Purple", "Brown", "Gray", "Orange", "Pink","turquoise"),
labels=c("Peni", "Cepha", "Tetra", "Amino", "Amphe", "Glyco", "Keto", "Macro", "Other","Total(anti)")) +
theme_gray(20) +
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
View(anti)
#날짜 만들기
anti$date = paste0(anti$USE_YEAR,anti$USE_MONTH)
anti$date <- as.Date(paste(as.character(anti$date), '01'), format='%Y%m%d')
####그래프 - pt ----
options(scipen = 5) #과학적 스케일 적용
#성분별 그래프
##전체
ggplot(data=peni, aes(x = date, y = category_pt)) +
geom_point(aes(color="Black"), size=1.5) +
geom_line(aes(color="Black")) +
geom_point(data=cepha, aes(x = date, y = category_pt, color = "Blue"), size=1.5) +
geom_line(data=cepha, aes(x = date, y = category_pt, color = "Blue")) +
geom_point(data=tetra, aes(x = date, y = category_pt, color = "Red"), size=1.5) +
geom_line(data=tetra, aes(x = date, y = category_pt, color = "Red")) +
geom_point(data=amino, aes(x = date, y = category_pt, color = "Green"), size=1.5) +
geom_line(data=amino, aes(x = date, y = category_pt, color = "Green")) +
geom_point(data=amphe, aes(x = date, y = category_pt, color = "Purple"), size=1.5) +
geom_line(data=amphe, aes(x = date, y = category_pt, color = "Purple")) +
geom_point(data=glyco, aes(x = date, y = category_pt, color = "Brown"), size=1.5) +
geom_line(data=glyco, aes(x = date, y = category_pt, color = "Brown")) +
geom_point(data=keto, aes(x = date, y = category_pt, color = "Gray"), size=1.5) +
geom_line(data=keto, aes(x = date, y = category_pt, color = "Gray")) +
geom_point(data=macro, aes(x = date, y = category_pt, color = "Orange"), size=1.5) +
geom_line(data=macro, aes(x = date, y = category_pt, color = "Orange")) +
geom_point(data=other, aes(x = date, y = category_pt, color = "Pink"), size=1.5) +
geom_line(data=other, aes(x = date, y = category_pt, color = "Pink")) +
geom_point(data=anti, aes(x = date, y = category_pt, color = "turquoise"), size=1.5) +
geom_line(data=anti, aes(x = date, y = category_pt, color = "turquoise")) +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="patient number", limits = c(0,10000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values=c("Black", "Blue", "Red", "Green", "Purple", "Brown", "Gray", "Orange", "Pink","turquoise"),
labels=c("Peni", "Cepha", "Tetra", "Amino", "Amphe", "Glyco", "Keto", "Macro", "Other","Total(anti)")) +
theme_gray(20) +
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
View(medicine_result_anti2)
#각 성분별 분류
##병원내 IN 항생제 분류
IN_anti <- medicine_result_anti_hos2 %>%
froup_by(date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt))
#각 성분별 분류
##병원내 IN 항생제 분류
IN_anti <- medicine_result_anti_hos2 %>%
group_by(date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt))
View(IN_anti)
View(IN_peni)
#각 성분별 분류
##병원내 IN 항생제 분류
IN_anti <- medicine_result_anti_hos2 %>%
group_by(USE_MONTH,USE_YEAR, date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt))
View(IN_anti)
View(IN_peni)
View(IN_anti)
#각 성분별 분류
##병원내 IN 항생제 분류
IN_anti <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
group_by(USE_MONTH,USE_YEAR, OUT_IN_HOS,date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt))
View(IN_anti)
View(IN_peni)
View(anti)
View(IN_peni)
View(IN_anti)
IN_cepha <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Cephalosporins")
View(IN_cepha)
IN_tetra <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Tetracyclines")
library(tidyverse)
library(ggplot2)
library(lubridate)
IN_tetra <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Tetracyclines")
View(IN_tetra)
IN_macro <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Macrolides")
IN_glyco <- medicine_result_anti2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Glycopeptides")
IN_glyco <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Glycopeptides")
IN_amino <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Aminoglycosides")
IN_amphe <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Amphenicols")
IN_keto <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Ketolides")
IN_other <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Other")
#### 요양기관 종별을 포함한 환자 데이터 추출 ----
# 반복 작업을 위한 함수 정의
process_med_file <- function(file_path) {
med_df_hos <- read_csv(file_path)
result <- med_df_hos %>%
mutate(USE_YEAR = factor(USE_YEAR),
USE_MONTH = factor(USE_MONTH)) %>%
group_by(WK_COMPN_4, OUT_IN_HOS,USE_YEAR, USE_MONTH) %>%
summarise(pres = sum(PRSCRPTN_TNDN_CNT),
pt = sum(PATIENT_CNT))
return(result)
} #pres는 처방수, pt는 환자수
# 결과를 저장할 리스트 생성
MEDICINE_list_hos <- list()
# MEDINE(1)부터 MEDINE(70)까지의 파일에 대해 반복 작업 수행
for (i in 1:70) {
file_path <- paste0("MEDICINE/MEDICINE (", i, ").csv")
if(!file.exists(file_path)){next}
result <- process_med_file(file_path)
MEDICINE_list_hos[[i]] <- result
}
# 결과를 하나의 데이터프레임으로 병합
MEDICINE_result_hos <- do.call(rbind, MEDICINE_list_hos)
# 결과 확인
print(MEDICINE_result_hos)
####데이터 전처리 및 항생제 사용 환자 추출 ----
MEDICINE_result_hos <- MEDICINE_result_hos %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4))
medicine_result_anti_hos <- inner_join(MEDICINE_result_hos, medi_inform_anti, by='WK_COMPN_4')
#항생제 분류(class,jo,prod,category)
medi_inform_anti <- read.csv("filtered_class_antibiotics.csv") %>%
mutate(WK_COMPN_4 = jo) %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4)) %>%
select(-jo)
####데이터 전처리 및 항생제 사용 환자 추출 ----
MEDICINE_result_hos <- MEDICINE_result_hos %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4))
medicine_result_anti_hos <- inner_join(MEDICINE_result_hos, medi_inform_anti, by='WK_COMPN_4')
colSums(is.na(medicine_result_anti_hos))
head(medicine_result_anti$pt)
#항생제 분류(class,jo,prod,category)
medi_inform_anti <- read.csv("filtered_class_antibiotics.csv") %>%
mutate(WK_COMPN_4 = jo) %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4)) %>%
select(-jo)
####데이터 전처리 및 항생제 사용 환자 추출 ----
MEDICINE_result_hos <- MEDICINE_result_hos %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4))
medicine_result_anti_hos <- inner_join(MEDICINE_result_hos, medi_inform_anti, by='WK_COMPN_4')
colSums(is.na(medicine_result_anti_hos))
head(medicine_result_anti$pt)
head(medicine_result_anti_hos$pt)
#category로 합치기
medicine_result_anti_hos2 <- medicine_result_anti_hos %>%
group_by(USE_YEAR,USE_MONTH,category,OUT_IN_HOS) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt))
#날짜 만들기
medicine_result_anti_hos2$date = paste0(medicine_result_anti_hos2$USE_YEAR,medicine_result_anti_hos2$USE_MONTH)
medicine_result_anti_hos2$date <- as.Date(paste(as.character(medicine_result_anti_hos2$date), '01'), format='%Y%m%d')
#각 성분별 분류
##병원내 IN 항생제 분류
IN_anti <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
group_by(USE_MONTH,USE_YEAR, OUT_IN_HOS,date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt))
IN_peni <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Penicillins")
IN_cepha <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Cephalosporins")
IN_cepha <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Cephalosporins")
IN_tetra <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Tetracyclines")
IN_macro <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Macrolides")
IN_glyco <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Glycopeptides")
IN_amino <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Aminoglycosides")
IN_amphe <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Amphenicols")
IN_keto <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Ketolides")
IN_other <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "IN") %>%
filter(category == "Other")
##병원외 OUT 항생제 분류
OUT_anti <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
group_by(USE_MONTH, USE_YEAR, OUT_IN_HOS, date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt))
OUT_peni <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Penicillins")
OUT_cepha <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Cephalosporins")
OUT_tetra <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Tetracyclines")
OUT_macro <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Macrolides")
OUT_glyco <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Glycopeptides")
OUT_amino <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Aminoglycosides")
OUT_amphe <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Amphenicols")
OUT_keto <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Ketolides")
OUT_other <- medicine_result_anti_hos2 %>%
filter(OUT_IN_HOS == "OUT") %>%
filter(category == "Other")
ggplot(data=IN_peni, aes(x = date, y = category_pt)) +
geom_point(color="black", size=1.5) +
geom_line(color="black") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,50000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
