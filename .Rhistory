geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = H_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = H_peni, aes(color = "Penicillins")) +
geom_point(data = H_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = H_cepha, aes(color = "Cephalosporins")) +
geom_point(data = H_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = H_tetra, aes(color = "Tetracyclines")) +
geom_point(data = H_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = H_macro, aes(color = "Macrolides")) +
geom_point(data = H_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = H_glyco, aes(color = "Glycopeptides")) +
geom_point(data = H_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = H_amino, aes(color = "Aminoglycosides")) +
geom_point(data = H_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = H_amphe, aes(color = "Amphenicols")) +
geom_point(data = H_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = H_keto, aes(color = "Ketolides")) +
geom_point(data = H_other, aes(color = "Other"), size = 1.5) +
geom_line(data = H_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Prescription Number", limits = c(0, 10000000)) +
scale_x_date(name=" ", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-31')),
expand = c(0,1)) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
breaks = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other"),
name = "Category") +
labs(title = "Prescription number by Hospital Classification") +
facet_wrap(~YOYANG_CLSFC_CD_ADJ) +  # 패싯을 추가하여 각 병원 등급 구분
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold', size = 10),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
####병원 pres----
#y축을 750,000으로 지정
ggplot(data = H_anti, aes(x = date, y = category_pres)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = H_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = H_peni, aes(color = "Penicillins")) +
geom_point(data = H_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = H_cepha, aes(color = "Cephalosporins")) +
geom_point(data = H_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = H_tetra, aes(color = "Tetracyclines")) +
geom_point(data = H_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = H_macro, aes(color = "Macrolides")) +
geom_point(data = H_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = H_glyco, aes(color = "Glycopeptides")) +
geom_point(data = H_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = H_amino, aes(color = "Aminoglycosides")) +
geom_point(data = H_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = H_amphe, aes(color = "Amphenicols")) +
geom_point(data = H_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = H_keto, aes(color = "Ketolides")) +
geom_point(data = H_other, aes(color = "Other"), size = 1.5) +
geom_line(data = H_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Prescription Number", limits = c(0, 1000000)) +
scale_x_date(name=" ", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-31')),
expand = c(0,1)) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
breaks = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other"),
name = "Category") +
labs(title = "Prescription number by Hospital Classification") +
facet_wrap(~YOYANG_CLSFC_CD_ADJ) +  # 패싯을 추가하여 각 병원 등급 구분
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold', size = 10),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
####병원 pres----
#y축을 750,000으로 지정
ggplot(data = H_anti, aes(x = date, y = category_pres)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = H_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = H_peni, aes(color = "Penicillins")) +
geom_point(data = H_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = H_cepha, aes(color = "Cephalosporins")) +
geom_point(data = H_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = H_tetra, aes(color = "Tetracyclines")) +
geom_point(data = H_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = H_macro, aes(color = "Macrolides")) +
geom_point(data = H_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = H_glyco, aes(color = "Glycopeptides")) +
geom_point(data = H_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = H_amino, aes(color = "Aminoglycosides")) +
geom_point(data = H_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = H_amphe, aes(color = "Amphenicols")) +
geom_point(data = H_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = H_keto, aes(color = "Ketolides")) +
geom_point(data = H_other, aes(color = "Other"), size = 1.5) +
geom_line(data = H_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Prescription Number", limits = c(0, 1250000)) +
scale_x_date(name=" ", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-31')),
expand = c(0,1)) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
breaks = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other"),
name = "Category") +
labs(title = "Prescription number by Hospital Classification") +
facet_wrap(~YOYANG_CLSFC_CD_ADJ) +  # 패싯을 추가하여 각 병원 등급 구분
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold', size = 10),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
library(tidyverse)
library(ggplot2)
library(lubridate)
# create a dummy dataframe
# Here the interruption takes place at week 51
df<-tibble(
Time = 1:100,
Intervention = c(rep(0,50),rep(1,50)),
Post.intervention.time = c(rep(0,50),1:50),
quantity.x = c(sort(sample(200:300,size = 50,replace = T),decreasing = T)+sample(-20:20,50,replace = T),c(sort(sample(20:170,size = 50,replace = T),decreasing = T)+sample(-40:40,50,replace = T)))
)
library(tidyverse)
# create a dummy dataframe
# Here the interruption takes place at week 51
df<-tibble(
Time = 1:100,
Intervention = c(rep(0,50),rep(1,50)),
Post.intervention.time = c(rep(0,50),1:50),
quantity.x = c(sort(sample(200:300,size = 50,replace = T),decreasing = T)+sample(-20:20,50,replace = T),c(sort(sample(20:170,size = 50,replace = T),decreasing = T)+sample(-40:40,50,replace = T)))
)
datatable(df,options = list(pageLength = 100, scrollY = "200px"))
library(nlme)
install.packages(nlme)
install.packages(nlme)
installed packages(nlme)
install.packages(nlme)
install.packages(nlme)
install.packages(nlme)
install.packages(nlme)
install.packages("nlme")
library(tidyverse)
library(nlme)
install.packages("AICcmodavg")
library(AICcmodavg)
# create a dummy "nlme"# create a dummy dataframe
# Here the interruption takes place at week 51
df<-tibble(
Time = 1:100,
Intervention = c(rep(0,50),rep(1,50)),
Post.intervention.time = c(rep(0,50),1:50),
quantity.x = c(sort(sample(200:300,size = 50,replace = T),decreasing = T)+sample(-20:20,50,replace = T),c(sort(sample(20:170,size = 50,replace = T),decreasing = T)+sample(-40:40,50,replace = T)))
)
datatable(df,options = list(pageLength = 100, scrollY = "200px"))
model.a = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df,method="ML")
# Show a summary of the model
summary(model.a)
df<-df %>% mutate(
model.a.predictions = predictSE.gls (model.a, df, se.fit=T)$fit,
model.a.se = predictSE.gls (model.a, df, se.fit=T)$se
)
ggplot(df,aes(Time,quantity.x))+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgreen")+
geom_line(aes(Time,model.a.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
mod.1 = quantity.x ~ Time + Intervention + Post.intervention.time
fx = function(pval,qval){summary(gls(mod.1, data = df, correlation= corARMA(p=pval,q=qval, form = ~ Time),method="ML"))$AIC}
p = summary(gls(mod.1, data = df,method="ML"))$AIC
message(str_c ("AIC Uncorrelated model = ",p))
## AIC Uncorrelated model = 873.838811568721
autocorrel = expand.grid(pval = 0:2, qval = 0:2)
mod.1 = quantity.x ~ Time + Intervention + Post.intervention.time
fx = function(pval,qval){summary(gls(mod.1, data = df, correlation= corARMA(p=pval,q=qval, form = ~ Time),method="ML"))$AIC}
p = summary(gls(mod.1, data = df,method="ML"))$AIC
message(str_c ("AIC Uncorrelated model = ",p))
## AIC Uncorrelated model = 873.838811568721
autocorrel = expand.grid(pval = 0:2, qval = 0:2)
for(i in 2:nrow(autocorrel)){p[i] = try(summary(gls(mod.1, data = df, correlation= corARMA(p=autocorrel$pval[i],q=autocorrel$qval[i], form = ~ Time),method="ML"))$AIC)}
autocorrel<- autocorrel %>%
mutate(AIC = as.numeric(p)) %>%
arrange(AIC)
autocorrel
model.b = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df,method="ML", correlation= corARMA(p=2,q=2, form = ~ Time))
coefficients(model.a)
coefficients(model.b)
df<- df %>%
mutate(
model.b.predictions = predictSE.gls (model.b, df, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df, se.fit=T)$se
)
df2<-filter(df,Time<51)
model.c = gls(quantity.x ~ Time, data = df2, correlation= corARMA(p=1, q=1, form = ~ Time),method="ML")
coefficients(model.a)
coefficients(model.c)
df<- df %>%
mutate(
model.b.predictions = predictSE.gls (model.b, df, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df, se.fit=T)$se
)
df2<-filter(df,Time<51)
model.c = gls(quantity.x ~ Time, data = df2, correlation= corARMA(p=1, q=1, form = ~ Time),method="ML")
coefficients(model.a)
coefficients(model.c)
df<-df %>% mutate(
model.c.predictions = predictSE.gls (model.c, newdata = df, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df, se.fit=T)$se
)
ggplot(df,aes(Time,quantity.x))+
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "pink")+
geom_line(aes(Time,model.c.predictions),color="red",lty=2)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "lightgreen")+
geom_line(aes(Time,model.b.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
df3<-tibble(
Time = 1:150,
Intervention = c(rep(0,50),rep(1,100)),
Post.intervention.time = c(rep(0,50),1:100),
Intervention.2 = c(rep(0,100),rep(1,50)),
Post.intervention.2.time = c(rep(0,100),1:50),
quantity.x = c(sort(sample(2000:2500,size = 50,replace = T),decreasing = T)+sample(-20:20,50,replace = T),c(sort(sample(200:1700,size = 50,replace = T),decreasing = T)+sample(-40:40,50,replace = T)),c(sort(sample(200:450,size = 50,replace = T),decreasing = F)+sample(-40:40,50,replace = T)))
)
datatable(df3,options = list(pageLength = 100, scrollY = "200px"))
#Part 2 - Uncontrolled ITS, two interventions ----
# create a dummy dataframe
# Here the interruption takes place at week 51
df3<-tibble(
Time = 1:150,
Intervention = c(rep(0,50),rep(1,100)),
Post.intervention.time = c(rep(0,50),1:100),
Intervention.2 = c(rep(0,100),rep(1,50)),
Post.intervention.2.time = c(rep(0,100),1:50),
quantity.x = c(sort(sample(2000:2500,size = 50,replace = T),decreasing = T)+sample(-20:20,50,replace = T),c(sort(sample(200:1700,size = 50,replace = T),decreasing = T)+sample(-40:40,50,replace = T)),c(sort(sample(200:450,size = 50,replace = T),decreasing = F)+sample(-40:40,50,replace = T)))
)
model.d = gls(quantity.x ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time, data = df3,method="ML", correlation= corARMA(p=2,q=2, form = ~ Time))
# Show a summary of the model
summary(model.d)
df3<-df3 %>% mutate(
model.d.predictions = predictSE.gls (model.d, df3, se.fit=T)$fit,
model.d.se = predictSE.gls (model.d, df3, se.fit=T)$se
)
ggplot(df3,aes(Time,quantity.x))+
geom_ribbon(aes(ymin = model.d.predictions - (1.96*model.d.se), ymax = model.d.predictions + (1.96*model.d.se)), fill = "lightgreen")+
geom_line(aes(Time,model.d.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
df4<-filter(df3,Time<51)
model.e = gls(quantity.x ~ Time, data = df4, correlation= corARMA(p=1, q=1, form = ~ Time),method="ML")
df3<-df3 %>% mutate(
model.e.predictions = predictSE.gls (model.e, newdata = df3, se.fit=T)$fit,
model.e.se = predictSE.gls (model.e, df3, se.fit=T)$se
)
df5<-filter(df3,Time<101)
model.f = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df5, correlation= corARMA(p=1, q=1, form = ~ Time),method="ML")
df3<-df3 %>% mutate(
model.f.predictions = predictSE.gls (model.f, newdata = df3, se.fit=T)$fit,
model.f.se = predictSE.gls (model.f, df3, se.fit=T)$se
)
ggplot(df3,aes(Time,quantity.x))+
geom_ribbon(aes(ymin = model.f.predictions - (1.96*model.d.se), ymax = model.f.predictions + (1.96*model.e.se)), fill = "lightblue")+
geom_line(aes(Time,model.f.predictions),color="blue",lty=2)+
geom_ribbon(aes(ymin = model.e.predictions - (1.96*model.d.se), ymax = model.e.predictions + (1.96*model.e.se)), fill = "pink")+
geom_line(aes(Time,model.e.predictions),color="red",lty=2)+
geom_ribbon(aes(ymin = model.d.predictions - (1.96*model.d.se), ymax = model.d.predictions + (1.96*model.d.se)), fill = "lightgreen")+
geom_line(aes(Time,model.d.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
library(tidyverse)
library(nlme)
library(AICcmodavg)
#Uncontrolled ITS, two interventions ----
df <- readxl::read_xlsx("total.xlsx")
# P와 Q 탐지
mod.1 = quantity.x ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time
#Uncontrolled ITS, two interventions ----
df <- readxl::read_xlsx("total.xlsx")
# P와 Q 탐지
mod.1 = quantity.x ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time
#Uncontrolled ITS, two interventions ----
df1 <- readxl::read_xlsx("total.xlsx")
# P와 Q 탐지
mod.1 = quantity.x ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time
fx = function(pval,qval){summary(gls(mod.1, data = df1, correlation= corARMA(p=pval,q=qval, form = ~ Time),method="ML"))$AIC}
p = summary(gls(mod.1, data = df1,method="ML"))$AIC
message(str_c ("AIC Uncorrelated model = ",p))
autocorrel = expand.grid(pval = 0:5, qval = 0:5)
for(i in 2:nrow(autocorrel)){p[i] = try(summary(gls(mod.1, data = df3, correlation= corARMA(p=autocorrel$pval[i],q=autocorrel$qval[i], form = ~ Time),method="ML"))$AIC)}
for(i in 2:nrow(autocorrel)){p[i] = try(summary(gls(mod.1, data = df1, correlation= corARMA(p=autocorrel$pval[i],q=autocorrel$qval[i], form = ~ Time),method="ML"))$AIC)}
autocorrel<- autocorrel %>%
mutate(AIC = as.numeric(p)) %>%
arrange(AIC)
autocorrel
model.d = gls(quantity.x ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time, data = df3,method="ML", correlation= corARMA(p=1,q=0, form = ~ Time))
# P와 Q 탐지
mod.1 = quantity.x2 ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time
fx = function(pval,qval){summary(gls(mod.1, data = df1, correlation= corARMA(p=pval,q=qval, form = ~ Time),method="ML"))$AIC}
p = summary(gls(mod.1, data = df1,method="ML"))$AIC
message(str_c ("AIC Uncorrelated model = ",p))
autocorrel = expand.grid(pval = 0:5, qval = 0:5)
for(i in 2:nrow(autocorrel)){p[i] = try(summary(gls(mod.1, data = df1, correlation= corARMA(p=autocorrel$pval[i],q=autocorrel$qval[i], form = ~ Time),method="ML"))$AIC)}
autocorrel<- autocorrel %>%
mutate(AIC = as.numeric(p)) %>%
arrange(AIC)
autocorrel
model.a = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time, data = df1,method="ML", correlation= corARMA(p=1,q=0, form = ~ Time))
#model 설정 및 ARMA 설정
## P와 Q 탐지
mod.1 = quantity.x2 ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time
fx = function(pval,qval){summary(gls(mod.1, data = df1, correlation= corARMA(p=pval,q=qval, form = ~ Time),method="ML"))$AIC}
p = summary(gls(mod.1, data = df1,method="ML"))$AIC
message(str_c ("AIC Uncorrelated model = ",p))
autocorrel = expand.grid(pval = 0:5, qval = 0:5)
for(i in 2:nrow(autocorrel)){p[i] = try(summary(gls(mod.1, data = df1, correlation= corARMA(p=autocorrel$pval[i],q=autocorrel$qval[i], form = ~ Time),method="ML"))$AIC)}
autocorrel<- autocorrel %>%
mutate(AIC = as.numeric(p)) %>%
arrange(AIC)
autocorrel
# Show a summary of the model
summary(model.a)
df1<-df1 %>% mutate(
model.a.predictions = predictSE.gls (model.a, df1, se.fit=T)$fit,
model.a.se = predictSE.gls (model.a, df1, se.fit=T)$se
)
ggplot(df1,aes(Time,quantity.x))+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgreen")+
geom_line(aes(Time,model.a.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df2<-df2 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df2<-filter(df3,Time<25)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
#
ggplot(df1,aes(Time,quantity.x2))+
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.d.se), ymax = model.c.predictions + (1.96*model.e.se)), fill = "lightblue")+
geom_line(aes(Time,model.c.predictions),color="blue",lty=2)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.d.se), ymax = model.b.predictions + (1.96*model.e.se)), fill = "pink")+
geom_line(aes(Time,model.b.predictions),color="red",lty=2)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.d.se), ymax = model.a.predictions + (1.96*model.d.se)), fill = "lightgreen")+
geom_line(aes(Time,model.a.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df1, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
model.c = gls(quantity.x ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x2 ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
#분석 model 형성
model.a = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time, data = df1,method="ML", correlation= corARMA(p=1,q=0, form = ~ Time))
# Show a summary of the model
summary(model.a)
df1<-df1 %>% mutate(
model.a.predictions = predictSE.gls (model.a, df1, se.fit=T)$fit,
model.a.se = predictSE.gls (model.a, df1, se.fit=T)$se
)
ggplot(df1,aes(Time,quantity.x2))+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgreen")+
geom_line(aes(Time,model.a.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x2 ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
#Uncontrolled ITS, two interventions ----
df1 <- readxl::read_xlsx("total.xlsx")
#model 설정 및 ARMA 설정
## P와 Q 탐지
mod.1 = quantity.x2 ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time
fx = function(pval,qval){summary(gls(mod.1, data = df1, correlation= corARMA(p=pval,q=qval, form = ~ Time),method="ML"))$AIC}
p = summary(gls(mod.1, data = df1,method="ML"))$AIC
message(str_c ("AIC Uncorrelated model = ",p))
autocorrel = expand.grid(pval = 0:5, qval = 0:5)
for(i in 2:nrow(autocorrel)){p[i] = try(summary(gls(mod.1, data = df1, correlation= corARMA(p=autocorrel$pval[i],q=autocorrel$qval[i], form = ~ Time),method="ML"))$AIC)}
autocorrel<- autocorrel %>%
mutate(AIC = as.numeric(p)) %>%
arrange(AIC)
autocorrel
#분석 model 형성
model.a = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time + Intervention.2 + Post.intervention.2.time, data = df1,method="ML", correlation= corARMA(p=1,q=0, form = ~ Time))
# Show a summary of the model
summary(model.a)
df1<-df1 %>% mutate(
model.a.predictions = predictSE.gls (model.a, df1, se.fit=T)$fit,
model.a.se = predictSE.gls (model.a, df1, se.fit=T)$se
)
ggplot(df1,aes(Time,quantity.x2))+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgreen")+
geom_line(aes(Time,model.a.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
# 반사실 그래프화
df2<-filter(df1,Time<25)
model.b = gls(quantity.x2 ~ Time, data = df2, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.b.predictions = predictSE.gls (model.b, newdata = df1, se.fit=T)$fit,
model.b.se = predictSE.gls (model.b, df1, se.fit=T)$se
)
df3<-filter(df1,Time<49)
model.c = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
View(model.c)
df1<-df1 %>% mutate(
model.c.predictions = predictSE.gls (model.C, newdata = df1, se.fit=T)$fit,
model.c.se = predictSE.gls (model.c, df1, se.fit=T)$se
)
model.c = gls(quantity.x2 ~ Time + Intervention + Post.intervention.time, data = df3, correlation= corARMA(p=1, q=0, form = ~ Time),method="ML")
View(model.c)
View(model.b)
View(model.c)
ggplot(df3,aes(Time,quantity.x))+
geom_ribbon(aes(ymin = model.f.predictions - (1.96*model.d.se), ymax = model.f.predictions + (1.96*model.e.se)), fill = "lightblue")+
geom_line(aes(Time,model.f.predictions),color="blue",lty=2)+
geom_ribbon(aes(ymin = model.e.predictions - (1.96*model.d.se), ymax = model.e.predictions + (1.96*model.e.se)), fill = "pink")+
geom_line(aes(Time,model.e.predictions),color="red",lty=2)+
geom_ribbon(aes(ymin = model.d.predictions - (1.96*model.d.se), ymax = model.d.predictions + (1.96*model.d.se)), fill = "lightgreen")+
geom_line(aes(Time,model.d.predictions),color="black",lty=1)+
geom_point(alpha=0.3)
