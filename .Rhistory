geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,500000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,3000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,100000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,10000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,50000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
View(other)
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,10000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
#성분별 그래프
##penicillins
ggplot(data=peni, aes(x = date, y = category_pres)) +
geom_point(color="black", size=1.5) +
geom_line(color="black") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="pres",limits = c(0,2000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,50000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=other, aes(x = date, y = category_pt)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,10000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Cephalosporins
ggplot(data=cepha, aes(x = date, y = category_pres)) +
geom_point(color="red", size=1.5) +
geom_line(color="red") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,6000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Cephalosporins
ggplot(data=cepha, aes(x = date, y = category_pres)) +
geom_point(color="red", size=1.5) +
geom_line(color="red") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,7000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
View(cepha)
##Cephalosporins
ggplot(data=cepha, aes(x = date, y = category_pres)) +
geom_point(color="red", size=1.5) +
geom_line(color="red") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,6000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Tetracyclines
ggplot(data=tetra, aes(x = date, y = category_pres)) +
geom_point(color="blue", size=1.5) +
geom_line(color="blue") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,250000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
View(tetra)
##Tetracyclines
ggplot(data=tetra, aes(x = date, y = category_pres)) +
geom_point(color="blue", size=1.5) +
geom_line(color="blue") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,260000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Tetracyclines
ggplot(data=tetra, aes(x = date, y = category_pres)) +
geom_point(color="blue", size=1.5) +
geom_line(color="blue") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,300000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Macrolides
ggplot(data=macro, aes(x = date, y = category_pres)) +
geom_point(color="green", size=1.5) +
geom_line(color="green") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,3000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Glycopeptides
ggplot(data=glyco, aes(x = date, y = category_pres)) +
geom_point(color="pink", size=1.5) +
geom_line(color="pink") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,30000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Aminoglycosides
ggplot(data=amino, aes(x = date, y = category_pres)) +
geom_point(color="purple", size=1.5) +
geom_line(color="purple") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Amphenicols
ggplot(data=amphe, aes(x = date, y = category_pres)) +
geom_point(color="gray", size=1.5) +
geom_line(color="gray") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Amphenicols
ggplot(data=amphe, aes(x = date, y = category_pres)) +
geom_point(color="gray", size=1.5) +
geom_line(color="gray") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Aminoglycosides
ggplot(data=amino, aes(x = date, y = category_pres)) +
geom_point(color="purple", size=1.5) +
geom_line(color="purple") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1000000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
View(amino)
##Aminoglycosides
ggplot(data=amino, aes(x = date, y = category_pres)) +
geom_point(color="purple", size=1.5) +
geom_line(color="purple") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,1100000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##Ketolides
ggplot(data=keto, aes(x = date, y = category_pres)) +
geom_point(color="brown", size=1.5) +
geom_line(color="brown") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,500000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##other
ggplot(data=other, aes(x = date, y = category_pres)) +
geom_point(color="orange", size=1.5) +
geom_line(color="orange") +
geom_hline(yintercept=0, linetype="solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
#
scale_y_continuous(name="number",limits = c(0,50000)) +
scale_x_date(name=" ", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-01'))) +
#
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
##total
total <- medicine_result_anti %>%
group_by(USE_YEAR,USE_MONTH) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt))
#패키지 ----
library(tidyverse)
library(ggplot2)
library(lubridate)
##total
total <- medicine_result_anti %>%
group_by(USE_YEAR,USE_MONTH) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt))
#날짜 만들기
total$date = paste0(total$USE_YEAR,total$USE_MONTH)
total$date <- as.Date(paste(as.character(total$date), '01'), format='%Y%m%d')
View(MEDICINE_list)
# 반복 작업을 위한 함수 정의
process_med_file <- function(file_path) {
med_df_hos <- read_csv(file_path)
result <- med_df_hos %>%
mutate(USE_YEAR = factor(USE_YEAR),
USE_MONTH = factor(USE_MONTH)) %>%
group_by(WK_COMPN_4, OUT_IN_HOS,USE_YEAR, USE_MONTH) %>%
summarise(pres = sum(PRSCRPTN_TNDN_CNT),
pt = sum(PATIENT_CNT))
return(result)
} #pres는 처방수, pt는 환자수
# 결과를 저장할 리스트 생성
MEDICINE_list_hos <- list()
# MEDINE(1)부터 MEDINE(70)까지의 파일에 대해 반복 작업 수행
for (i in 1:70) {
file_path <- paste0("MEDICINE/MEDICINE (", i, ").csv")
if(!file.exists(file_path)){next}
result <- process_med_file(file_path)
MEDICINE_list_hos[[i]] <- result
}
# 결과를 하나의 데이터프레임으로 병합
MEDICINE_result_hos <- do.call(rbind, MEDICINE_list_hos)
