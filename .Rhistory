geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Incidence rate") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_continuous(name="Date") +
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
abs(title = "Patient number by Total") +
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
abs(title = "Patient number by Total") +
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
####전체 pres ----
#y축 값을 12,500,000으로 지정
ggplot(data = class_anti, aes(x = date, y = category_pres)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = class_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = class_peni, aes(color = "Penicillins")) +
geom_point(data = class_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = class_cepha, aes(color = "Cephalosporins")) +
geom_point(data = class_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = class_tetra, aes(color = "Tetracyclines")) +
geom_point(data = class_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = class_macro, aes(color = "Macrolides")) +
geom_point(data = class_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = class_glyco, aes(color = "Glycopeptides")) +
geom_point(data = class_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = class_amino, aes(color = "Aminoglycosides")) +
geom_point(data = class_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = class_amphe, aes(color = "Amphenicols")) +
geom_point(data = class_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = class_keto, aes(color = "Ketolides")) +
geom_point(data = class_other, aes(color = "Other"), size = 1.5) +
geom_line(data = class_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Prescriptiont Number", limits = c(0, 12500000)) +
scale_x_date(name=" ", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-31')),
expand = c(0,1)) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
breaks = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other"),
name = "Category") +
labs(title = "Prescription number by Hospital Classification") +
facet_wrap(~YOYANG_CLSFC_CD_ADJ) +  # 패싯을 추가하여 각 병원 등급 구분
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold', size = 10),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
###전체----
####전체 pt ----
#y축 값을 10,000,000으로 지정
ggplot(data = class_anti, aes(x = date, y = category_pt)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = class_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = class_peni, aes(color = "Penicillins")) +
geom_point(data = class_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = class_cepha, aes(color = "Cephalosporins")) +
geom_point(data = class_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = class_tetra, aes(color = "Tetracyclines")) +
geom_point(data = class_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = class_macro, aes(color = "Macrolides")) +
geom_point(data = class_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = class_glyco, aes(color = "Glycopeptides")) +
geom_point(data = class_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = class_amino, aes(color = "Aminoglycosides")) +
geom_point(data = class_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = class_amphe, aes(color = "Amphenicols")) +
geom_point(data = class_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = class_keto, aes(color = "Ketolides")) +
geom_point(data = class_other, aes(color = "Other"), size = 1.5) +
geom_line(data = class_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000)) +
scale_x_date(name=" ", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-31')),
expand = c(0,1)) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
breaks = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other"),
name = "Category") +
labs(title = "Patient number by Hospital Classification") +
facet_wrap(~YOYANG_CLSFC_CD_ADJ) +  # 패싯을 추가하여 각 병원 등급 구분
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold', size = 10),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
###상급종합병원(pt,pres,amt)----
####상급종합병원 pt ----
#y축 값을 250,000으로 지정
ggplot(data = SC_anti, aes(x = date, y = category_pt)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = SC_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = SC_peni, aes(color = "Penicillins")) +
geom_point(data = SC_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = SC_cepha, aes(color = "Cephalosporins")) +
geom_point(data = SC_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = SC_tetra, aes(color = "Tetracyclines")) +
geom_point(data = SC_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = SC_macro, aes(color = "Macrolides")) +
geom_point(data = SC_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = SC_glyco, aes(color = "Glycopeptides")) +
geom_point(data = SC_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = SC_amino, aes(color = "Aminoglycosides")) +
geom_point(data = SC_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = SC_amphe, aes(color = "Amphenicols")) +
geom_point(data = SC_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = SC_keto, aes(color = "Ketolides")) +
geom_point(data = SC_other, aes(color = "Other"), size = 1.5) +
geom_line(data = SC_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 250000)) +
scale_x_date(name=" ", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-31')),
expand = c(0,1)) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
breaks = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other"),
name = "Category") +
labs(title = "Patient number by Hospital Classification") +
facet_wrap(~YOYANG_CLSFC_CD_ADJ) +  # 패싯을 추가하여 각 병원 등급 구분
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold', size = 10),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
title = "Patient number by Total"+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
them(title = "Patient number by Total")+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
title(title = "Patient number by Total")+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
geom_ribbon(aes(ymin = model.c.predictions - (1.96*model.c.se), ymax = model.c.predictions + (1.96*model.c.se)), fill = "lightblue",alpha=0.5)+
geom_line(aes(date,model.c.predictions),color="blue", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.b.predictions - (1.96*model.b.se), ymax = model.b.predictions + (1.96*model.b.se)), fill = "pink",alpha=0.5)+
geom_line(aes(date,model.b.predictions),color="red", lty=2, size=2, alpha=0.75)+
geom_ribbon(aes(ymin = model.a.predictions - (1.96*model.a.se), ymax = model.a.predictions + (1.96*model.a.se)), fill = "lightgrey",alpha=0.5)+
geom_line(aes(date,model.a.predictions),color="black", lty=1, size=2, alpha=0.75)+
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_y_continuous(name="Patient Number") +
scale_x_date(name="Date", breaks = "6 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1))+
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.x = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
total_pt <- read_excel("total_pt_liner.xlsx")
## pt ----
pt <- readxl::read_xlsx("MEDICINE/analysis/ARMA/pt.xlsx")
total_pt_liner <- read_excel("MEDICINE/analysis/liner/total_pt_liner.xlsx")
library(tidyverse)
library(nlme)
library(AICcmodavg)
library(writexl)
library(forecast)
total_pt_liner <- read_excel("MEDICINE/analysis/liner/total_pt_liner.xlsx")
library(readxl)
total_pt_liner <- read_excel("MEDICINE/analysis/liner/total_pt_liner.xlsx")
total_pt_liner <- read_excel("MEDICINE/analysis/liner/total_pt_liner.xlsx")
View(total_pt)
View(total_pt_liner)
df <- read_excel("MEDICINE/analysis/liner/total_pt_liner.xlsx")
View(df)
# add date
df$date <- as.Date(paste(as.character(df$date), '01'), format='%Y%m%d')
# Figure
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("IA70, 2018-2023") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1)) +
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
#### Part Two - Uncontrolled ITS, two interventions ----
options(scipen = 8)
# Figure
options(scipen = 8)
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("IA70, 2018-2023") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1)) +
theme_gray(20)+
theme(panel.background=element_blank(),
panel.grid.major=element_line(color="grey90", size=0.5),
axis.ticks=element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
plot.title=element_text(size=rel(1.0)),
legend.title=element_blank())
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("IA70, 2018-2023") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01')),expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(1,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
View(df)
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=1)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=2) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=1)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y-%m", limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
ggplot(data=df, aes(x = date, y = quantity.x)) +
ggtitle("Toal Patient Number") +
geom_point(color="black", size=3, alpha=0.3) +
geom_vline(xintercept = as.numeric(as.Date("2020-02-01")), linetype="dashed", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2022-02-01")), linetype="dashed", size=1) +
geom_hline(yintercept=0, linetype="solid", size=1) +
geom_vline(xintercept = as.numeric(as.Date("2018-01-01")), linetype="solid", size=2)+
scale_x_date(name="Date", breaks = seq(as.Date("2018-01-01"), as.Date("2023-12-01"), by = "1 year"), limits = as.Date(c('2018-01-01','2023-12-01'))
,expand = c(0,1)) +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000))
