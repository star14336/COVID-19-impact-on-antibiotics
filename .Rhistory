geom_line(data = hos_tetra, aes(color = "Tetracyclines")) +
geom_point(data = hos_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = hos_macro, aes(color = "Macrolides")) +
geom_point(data = hos_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = hos_glyco, aes(color = "Glycopeptides")) +
geom_point(data = hos_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = hos_amino, aes(color = "Aminoglycosides")) +
geom_point(data = hos_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = hos_amphe, aes(color = "Amphenicols")) +
geom_point(data = hos_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = hos_keto, aes(color = "Ketolides")) +
geom_point(data = hos_other, aes(color = "Other"), size = 1.5) +
geom_line(data = hos_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 10000000)) +
scale_x_date(name="Date", breaks = "3 months", date_labels = paste0("%Y",".","%m"), limits = as.Date(c('2018-01-01','2023-12-1'))) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
name = "Category", labels = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other")) +
facet_wrap(~OUT_IN_HOS) +
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
#성별을 포함한 환자 데이터 추출 ----
# 반복 작업을 위한 함수 정의
process_med_file <- function(file_path) {
med_df_sex <- read_csv(file_path)
result <- med_df_sex %>%
mutate(USE_YEAR = factor(USE_YEAR),
USE_MONTH = factor(USE_MONTH)) %>%
group_by(WK_COMPN_4, SEX_TYPE,USE_YEAR, USE_MONTH) %>%
summarise(pres = sum(PRSCRPTN_TNDN_CNT),
pt = sum(PATIENT_CNT),
amt = sum(PRSCRPTN_AMT))
return(result)
} #pres는 처방수, pt는 환자수
# 결과를 저장할 리스트 생성
MEDICINE_list_sex <- list()
# MEDINE(1)부터 MEDINE(69)까지의 파일에 대해 반복 작업 수행
for (i in 1:72) {
file_path <- paste0("MEDICINE/MEDICINE (", i, ").csv")
if(!file.exists(file_path)){next}
result <- process_med_file(file_path)
MEDICINE_list_sex[[i]] <- result
}
# 결과를 하나의 데이터프레임으로 병합
MEDICINE_result_sex <- do.call(rbind, MEDICINE_list_sex)
# 결과 확인
print(MEDICINE_result_sex)
#항생제 분류(class,jo,prod,category)
medi_inform_anti <- read.csv("filtered_class_antibiotics.csv") %>%
mutate(WK_COMPN_4 = jo) %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4)) %>%
select(-jo)
####데이터 전처리 및 항생제 사용 환자 추출 ----
MEDICINE_result_sex <- MEDICINE_result_sex %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4))
medicine_result_anti_sex <- inner_join(MEDICINE_result_sex, medi_inform_anti, by='WK_COMPN_4')
colSums(is.na(medicine_result_anti_sex))
head(medicine_result_anti_sex$pt)
#category로 합치기
medicine_result_anti_sex2 <- medicine_result_anti_sex %>%
group_by(USE_YEAR,USE_MONTH,category,SEX_TYPE) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt), category_amt = sum(amt))
#날짜 만들기
medicine_result_anti_sex2$date = paste0(medicine_result_anti_sex2$USE_YEAR,medicine_result_anti_sex2$USE_MONTH)
medicine_result_anti_sex2$date <- as.Date(paste(as.character(medicine_result_anti_sex2$date), '01'), format='%Y%m%d')
#데이터 정제
medicine_result_anti_sex2 <- medicine_result_anti_sex2 %>%
mutate(SEX_TYPE = factor(SEX_TYPE, levels = c(1,2), labels = c("M","F")))
View(medicine_result_anti_sex2)
#각 성분별 분류
##남성 항생제 분류
M_anti <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
group_by(USE_MONTH, USE_YEAR, SEX_TYPE, date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt),
category_amt = sum(category_amt), .groups = 'drop')
View(M_anti)
M_peni <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Penicillins")
View(M_peni)
M_cepha <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Cephalosporins")
M_tetra <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Tetracyclines")
M_macro <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Macrolides")
M_glyco <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Glycopeptides")
M_amino <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Aminoglycosides")
M_amphe <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Amphenicols")
M_keto <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Ketolides")
M_other <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "M") %>%
filter(category == "Other")
##여성 항생제 분류
F_anti <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
group_by(USE_MONTH, USE_YEAR, SEX_TYPE, date) %>%
summarise(category_pres = sum(category_pres), category_pt = sum(category_pt),
category_amt = sum(category_amt),  .groups = 'drop')
F_peni <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Penicillins")
F_cepha <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Cephalosporins")
F_tetra <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Tetracyclines")
F_macro <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Macrolides")
F_glyco <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Glycopeptides")
F_amino <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Aminoglycosides")
F_amphe <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Amphenicols")
F_keto <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Ketolides")
F_other <- medicine_result_anti_sex2 %>%
filter(SEX_TYPE == "F") %>%
filter(category == "Other")
View(F_keto)
sex_anti<- rbind(M_anti, F_anti)
sex_peni <- rbind(M_peni, F_peni)
sex_cepha <- rbind(M_cepha, F_cepha)
sex_tetra <- rbind(M_tetra, F_tetra)
sex_macro <- rbind(M_macro, F_macro)
sex_glyco <- rbind(M_glyco, F_glyco)
sex_amino <- rbind(M_amino, F_amino)
sex_amphe <- rbind(M_amphe, F_amphe)
sex_keto <- rbind(M_keto, F_keto)
sex_other <- rbind(M_other, F_other)
View(sex_amphe)
View(sex_amino)
ggplot(data = sex_anti, aes(x = date, y = category_pt)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = sex_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = sex_peni, aes(color = "Penicillins")) +
geom_point(data = sex_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = sex_cepha, aes(color = "Cephalosporins")) +
geom_point(data = sex_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = sex_tetra, aes(color = "Tetracyclines")) +
geom_point(data = sex_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = sex_macro, aes(color = "Macrolides")) +
geom_point(data = sex_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = sex_glyco, aes(color = "Glycopeptides")) +
geom_point(data = sex_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = sex_amino, aes(color = "Aminoglycosides")) +
geom_point(data = sex_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = sex_amphe, aes(color = "Amphenicols")) +
geom_point(data = sex_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = sex_keto, aes(color = "Ketolides")) +
geom_point(data = sex_other, aes(color = "Other"), size = 1.5) +
geom_line(data = sex_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 7500000)) +
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
name = "Category", labels = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other")) +
facet_wrap(~SEX_TYPE) +
labs(title = "남녀 pt") +  # 그래프 제목 추가
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
#남녀 pres
ggplot(data = sex_anti, aes(x = date, y = category_pres)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = sex_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = sex_peni, aes(color = "Penicillins")) +
geom_point(data = sex_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = sex_cepha, aes(color = "Cephalosporins")) +
geom_point(data = sex_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = sex_tetra, aes(color = "Tetracyclines")) +
geom_point(data = sex_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = sex_macro, aes(color = "Macrolides")) +
geom_point(data = sex_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = sex_glyco, aes(color = "Glycopeptides")) +
geom_point(data = sex_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = sex_amino, aes(color = "Aminoglycosides")) +
geom_point(data = sex_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = sex_amphe, aes(color = "Amphenicols")) +
geom_point(data = sex_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = sex_keto, aes(color = "Ketolides")) +
geom_point(data = sex_other, aes(color = "Other"), size = 1.5) +
geom_line(data = sex_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 7500000)) +
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-09-30'))) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
name = "Category", labels = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other")) +
facet_wrap(~SEX_TYPE)+
labs(title = "남녀 pres") +  # 그래프 제목 추가
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
ggplot(data = sex_anti, aes(x = date, y = category_pt)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = sex_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = sex_peni, aes(color = "Penicillins")) +
geom_point(data = sex_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = sex_cepha, aes(color = "Cephalosporins")) +
geom_point(data = sex_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = sex_tetra, aes(color = "Tetracyclines")) +
geom_point(data = sex_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = sex_macro, aes(color = "Macrolides")) +
geom_point(data = sex_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = sex_glyco, aes(color = "Glycopeptides")) +
geom_point(data = sex_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = sex_amino, aes(color = "Aminoglycosides")) +
geom_point(data = sex_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = sex_amphe, aes(color = "Amphenicols")) +
geom_point(data = sex_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = sex_keto, aes(color = "Ketolides")) +
geom_point(data = sex_other, aes(color = "Other"), size = 1.5) +
geom_line(data = sex_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 7500000)) +
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-12-01'))) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
name = "Category", labels = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other")) +
facet_wrap(~SEX_TYPE) +
labs(title = "남녀 pt") +  # 그래프 제목 추가
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
# csv 파일로 저장
write.csv(M_anti, "MEDICINE/data/sex/m/M_anti.csv", row.names = FALSE)
# csv 파일로 저장
write.csv(M_anti, "MEDICINE/data/sex/m/M_anti.csv", row.names = FALSE)
write.csv(M_peni, "MEDICINE/data/sex/m/M_penicillins.csv", row.names = FALSE)
write.csv(M_cepha, "MEDICINE/data/sex/m/M_cephalosporins.csv", row.names = FALSE)
write.csv(M_tetra, "MEDICINE/data/sex/m/M_tetracyclines.csv", row.names = FALSE)
write.csv(M_macro, "MEDICINE/data/sex/m/M_macrolides.csv", row.names = FALSE)
write.csv(M_glyco, "MEDICINE/data/sex/m/M_glycopeptides.csv", row.names = FALSE)
write.csv(M_amino, "MEDICINE/data/sex/m/M_aminoglycosides.csv", row.names = FALSE)
write.csv(M_amphe, "MEDICINE/data/sex/m/M_amphenicols.csv", row.names = FALSE)
write.csv(M_keto, "MEDICINE/data/sex/m/M_ketolides.csv", row.names = FALSE)
write.csv(M_other, "MEDICINE/data/sex/m/M_other_anti.csv", row.names = FALSE)
# 하위 폴더 바로 불러오기
M_anti <- read_csv("MEDICINE/data/sex/m/M_anti.csv")
M_anti <- read_csv("MEDICINE/data/sex/m/M_anti.csv")
M_peni <- read_csv("MEDICINE/data/sex/m/M_penicillins.csv")
M_cepha <- read_csv("MEDICINE/data/sex/m/M_cephalosporins.csv")
M_tetra <- read_csv("MEDICINE/data/sex/m/M_tetracyclines.csv")
M_macro <- read_csv("MEDICINE/data/sex/m/M_macrolides.csv")
M_glyco <- read_csv("MEDICINE/data/sex/m/M_glycopeptides.csv")
M_amino <- read_csv("MEDICINE/data/sex/m/M_aminoglycosides.csv")
M_amphe <- read_csv("MEDICINE/data/sex/m/M_amphenicols.csv")
M_keto <- read_csv("MEDICINE/data/sex/m/M_ketolides.csv")
M_other <- read_csv("MEDICINE/data/sex/m/M_other_anti.csv")
# csv 파일로 저장(여성)
write.csv(F_anti, "MEDICINE/data/sex/f/F_anti.csv", row.names = FALSE)
write.csv(F_peni, "MEDICINE/data/sex/f/F_penicillins.csv", row.names = FALSE)
write.csv(F_cepha, "MEDICINE/data/sex/f/F_cephalosporins.csv", row.names = FALSE)
write.csv(F_tetra, "MEDICINE/data/sex/f/F_tetracyclines.csv", row.names = FALSE)
write.csv(F_macro, "MEDICINE/data/sex/f/F_macrolides.csv", row.names = FALSE)
write.csv(F_glyco, "MEDICINE/data/sex/f/F_glycopeptides.csv", row.names = FALSE)
write.csv(F_amino, "MEDICINE/data/sex/f/F_aminoglycosides.csv", row.names = FALSE)
write.csv(F_amphe, "MEDICINE/data/sex/f/F_amphenicols.csv", row.names = FALSE)
write.csv(F_keto, "MEDICINE/data/sex/f/F_ketolides.csv", row.names = FALSE)
write.csv(F_other, "MEDICINE/data/sex/f/F_other_anti.csv", row.names = FALSE)
F_anti <- read_csv("MEDICINE/data/sex/f/F_anti.csv")
F_peni <- read_csv("MEDICINE/data/sex/f/F_penicillins.csv")
F_cepha <- read_csv("MEDICINE/data/sex/f/F_cephalosporins.csv")
F_tetra <- read_csv("MEDICINE/data/sex/f/F_tetracyclines.csv")
F_macro <- read_csv("MEDICINE/data/sex/f/F_macrolides.csv")
F_glyco <- read_csv("MEDICINE/data/sex/f/F_glycopeptides.csv")
F_amino <- read_csv("MEDICINE/data/sex/f/F_aminoglycosides.csv")
F_amphe <- read_csv("MEDICINE/data/sex/f/F_amphenicols.csv")
F_keto <- read_csv("MEDICINE/data/sex/f/F_ketolides.csv")
F_other <- read_csv("MEDICINE/data/sex/f/F_other_anti.csv")
write.csv(sex_anti, "MEDICINE/data/sex/sex_anti.csv", row.names = FALSE)
write.csv(sex_peni, "MEDICINE/data/sex/sex_penicillins.csv", row.names = FALSE)
write.csv(sex_cepha, "MEDICINE/data/sex/sex_cephalosporins.csv", row.names = FALSE)
write.csv(sex_tetra, "MEDICINE/data/sex/sex_tetracyclines.csv", row.names = FALSE)
write.csv(sex_macro, "MEDICINE/data/sex/sex_macrolides.csv", row.names = FALSE)
write.csv(sex_glyco, "MEDICINE/data/sex/sex_glycopeptides.csv", row.names = FALSE)
write.csv(sex_amino, "MEDICINE/data/sex/sex_aminoglycosides.csv", row.names = FALSE)
write.csv(sex_amphe, "MEDICINE/data/sex/sex_amphenicols.csv", row.names = FALSE)
write.csv(sex_keto, "MEDICINE/data/sex/sex_ketolides.csv", row.names = FALSE)
write.csv(sex_other, "MEDICINE/data/sex/sex_other_anti.csv", row.names = FALSE)
sex_anti <- read_csv("MEDICINE/data/sex/sex_anti.csv")
sex_peni <- read_csv("MEDICINE/data/sex/sex_penicillins.csv")
sex_cepha <- read_csv("MEDICINE/data/sex/sex_cephalosporins.csv")
sex_tetra <- read_csv("MEDICINE/data/sex/sex_tetracyclines.csv")
sex_macro <- read_csv("MEDICINE/data/sex/sex_macrolides.csv")
sex_glyco <- read_csv("MEDICINE/data/sex/sex_glycopeptides.csv")
sex_amino <- read_csv("MEDICINE/data/sex/sex_aminoglycosides.csv")
sex_amphe <- read_csv("MEDICINE/data/sex/sex_amphenicols.csv")
sex_keto <- read_csv("MEDICINE/data/sex/sex_ketolides.csv")
sex_other <- read_csv("MEDICINE/data/sex/sex_other_anti.csv")
sex_anti <- read_csv("MEDICINE/data/sex/sex_anti.csv")
sex_peni <- read_csv("MEDICINE/data/sex/sex_penicillins.csv")
sex_cepha <- read_csv("MEDICINE/data/sex/sex_cephalosporins.csv")
sex_tetra <- read_csv("MEDICINE/data/sex/sex_tetracyclines.csv")
sex_macro <- read_csv("MEDICINE/data/sex/sex_macrolides.csv")
sex_glyco <- read_csv("MEDICINE/data/sex/sex_glycopeptides.csv")
sex_amino <- read_csv("MEDICINE/data/sex/sex_aminoglycosides.csv")
sex_amphe <- read_csv("MEDICINE/data/sex/sex_amphenicols.csv")
sex_keto <- read_csv("MEDICINE/data/sex/sex_ketolides.csv")
sex_other <- read_csv("MEDICINE/data/sex/sex_other_anti.csv")
#그래프 ----
options(scipen = 5)
ggplot(data = sex_anti, aes(x = date, y = category_pt)) +
geom_point(aes(color = "Total(anti)"), size = 1.5) +
geom_line(aes(color = "Total(anti)")) +
geom_point(data = sex_peni, aes(color = "Penicillins"), size = 1.5) +
geom_line(data = sex_peni, aes(color = "Penicillins")) +
geom_point(data = sex_cepha, aes(color = "Cephalosporins"), size = 1.5) +
geom_line(data = sex_cepha, aes(color = "Cephalosporins")) +
geom_point(data = sex_tetra, aes(color = "Tetracyclines"), size = 1.5) +
geom_line(data = sex_tetra, aes(color = "Tetracyclines")) +
geom_point(data = sex_macro, aes(color = "Macrolides"), size = 1.5) +
geom_line(data = sex_macro, aes(color = "Macrolides")) +
geom_point(data = sex_glyco, aes(color = "Glycopeptides"), size = 1.5) +
geom_line(data = sex_glyco, aes(color = "Glycopeptides")) +
geom_point(data = sex_amino, aes(color = "Aminoglycosides"), size = 1.5) +
geom_line(data = sex_amino, aes(color = "Aminoglycosides")) +
geom_point(data = sex_amphe, aes(color = "Amphenicols"), size = 1.5) +
geom_line(data = sex_amphe, aes(color = "Amphenicols")) +
geom_point(data = sex_keto, aes(color = "Ketolides"), size = 1.5) +
geom_line(data = sex_keto, aes(color = "Ketolides")) +
geom_point(data = sex_other, aes(color = "Other"), size = 1.5) +
geom_line(data = sex_other, aes(color = "Other")) +
geom_hline(yintercept = 0, linetype = "solid") +
geom_vline(xintercept = as.numeric(as.Date("2020-01-01")), linetype="dashed") +
geom_vline(xintercept = as.numeric(as.Date("2022-01-01")), linetype="dashed") +
scale_y_continuous(name="Patient Number", limits = c(0, 7500000)) +
scale_x_date(name="Date", breaks = "12 months", date_labels = "%Y", limits = as.Date(c('2018-01-01','2023-12-01'))) +
scale_color_manual(values = c("Total(anti)" = "Black", "Penicillins" = "Blue", "Cephalosporins" = "Red",
"Tetracyclines" = "Green", "Macrolides" = "Purple", "Glycopeptides" = "Brown",
"Aminoglycosides" = "Gray", "Amphenicols" = "Orange", "Ketolides" = "Pink", "Other" = "Turquoise"),
name = "Category", labels = c("Total(anti)", "Penicillins", "Cephalosporins", "Tetracyclines",
"Macrolides", "Glycopeptides", "Aminoglycosides", "Amphenicols",
"Ketolides", "Other")) +
facet_wrap(~SEX_TYPE) +
labs(title = "남녀 pt") +  # 그래프 제목 추가
theme_gray(20) +
theme(panel.background = element_blank(),
panel.grid.major = element_line(color = "grey90", size = 0.5),
axis.ticks = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, face = 'bold'),
axis.text.y = element_text(face = 'bold'),
axis.title.y = element_text(face = 'bold'),
plot.title = element_text(size = rel(1.0)),
legend.title = element_blank())
result <- med_df_age %>%
mutate(USE_YEAR = factor(USE_YEAR),
USE_MONTH = factor(USE_MONTH)) %>%
group_by(WK_COMPN_4, AGE_G,USE_YEAR, USE_MONTH) %>%
summarise(pres = sum(PRSCRPTN_TNDN_CNT),
pt = sum(PATIENT_CNT), amt = sum(PRSCRPTN_AMT))
return(result)
#연령을 포함한 환자 데이터 추출 ----
# 반복 작업을 위한 함수 정의
process_med_file <- function(file_path) {
med_df_age <- read_csv(file_path)
result <- med_df_age %>%
mutate(USE_YEAR = factor(USE_YEAR),
USE_MONTH = factor(USE_MONTH)) %>%
group_by(WK_COMPN_4, AGE_G,USE_YEAR, USE_MONTH) %>%
summarise(pres = sum(PRSCRPTN_TNDN_CNT),
pt = sum(PATIENT_CNT), amt = sum(PRSCRPTN_AMT))
return(result)
} #pres는 처방수, pt는 환자수
# 결과를 저장할 리스트 생성
MEDICINE_list_age <- list()
#연령을 포함한 환자 데이터 추출 ----
# 반복 작업을 위한 함수 정의
process_med_file <- function(file_path) {
med_df_age <- read_csv(file_path)
result <- med_df_age %>%
mutate(USE_YEAR = factor(USE_YEAR),
USE_MONTH = factor(USE_MONTH)) %>%
group_by(WK_COMPN_4, AGE_G,USE_YEAR, USE_MONTH) %>%
summarise(pres = sum(PRSCRPTN_TNDN_CNT),
pt = sum(PATIENT_CNT), amt = sum(PRSCRPTN_AMT))
return(result)
} #pres는 처방수, pt는 환자수
# 결과를 저장할 리스트 생성
MEDICINE_list_age <- list()
# MEDINE(1)부터 MEDINE(69)까지의 파일에 대해 반복 작업 수행
for (i in 1:72) {
file_path <- paste0("MEDICINE/MEDICINE (", i, ").csv")
if(!file.exists(file_path)){next}
result <- process_med_file(file_path)
MEDICINE_list_age[[i]] <- result
}
# 결과를 하나의 데이터프레임으로 병합
MEDICINE_result_age <- do.call(rbind, MEDICINE_list_age)
# 결과 확인
print(MEDICINE_result_age)
#항생제 분류(class,jo,prod,category)
medi_inform_anti <- read.csv("filtered_class_antibiotics.csv") %>%
mutate(WK_COMPN_4 = jo) %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4)) %>%
select(-jo)
####데이터 전처리 및 항생제 사용 환자 추출 ----
MEDICINE_result_age <- MEDICINE_result_age %>%
mutate(WK_COMPN_4 = factor(WK_COMPN_4))
medicine_result_anti_age <- inner_join(MEDICINE_result_age, medi_inform_anti, by='WK_COMPN_4')
colSums(is.na(medicine_result_anti_age))
head(medicine_result_anti_age$pt)
#category로 합치기
medicine_result_anti_age2 <- medicine_result_anti_age %>%
group_by(USE_YEAR,USE_MONTH,category,AGE_G) %>%
summarise(category_pres = sum(pres), category_pt = sum(pt), category_amt = sum(amt))
#날짜 만들기
medicine_result_anti_age2$date = paste0(medicine_result_anti_age2$USE_YEAR,medicine_result_anti_age2$USE_MONTH)
medicine_result_anti_age2$date <- as.Date(paste(as.character(medicine_result_anti_age2$date), '01'), format='%Y%m%d')
#데이터 정제
medicine_result_anti_age2 <- medicine_result_anti_age2 %>%
mutate(AGE_G = case_when(AGE_G < 20, 0,
AGE_G >= 20, < 60, 1,
#데이터 정제
medicine_result_anti_age2 <- medicine_result_anti_age2 %>%
mutate(AGE_G = case_when(AGE_G < 20, 0,
AGE_G >= 20|< 60, 1,
#데이터 정제
medicine_result_anti_age2 <- medicine_result_anti_age2 %>%
mutate(AGE_G = case_when(AGE_G < 20, 0,
AGE_G >= 20|AGE_G < 60, 1,
AGE_G >= 60, 2)) %>%
mutate(AGE_G = factor(AGE_G, levels = c(0,1,2), labels = c("junior","adult" ,"senior")))
#데이터 정제
medicine_result_anti_age2 <- medicine_result_anti_age2 %>%
mutate(AGE_G = case_when(AGE_G < "20", 0,
AGE_G >= "20"|AGE_G < "60", 1,
AGE_G >= "60", 2)) %>%
mutate(AGE_G = factor(AGE_G, levels = c(0,1,2), labels = c("junior","adult" ,"senior")))
#데이터 정제
medicine_result_anti_age2 <- medicine_result_anti_age2 %>%
mutate(AGE_G = case_when(AGE_G < 20, 0,
AGE_G >= 20|AGE_G < 60, 1,
AGE_G >= 60, 2)) %>%
mutate(AGE_G = factor(AGE_G, levels = c(0,1,2), labels = c("junior","adult" ,"senior")))
#데이터 정제
medicine_result_anti_age2 <- medicine_result_anti_age2 %>%
mutate(AGE_G = case_when(AGE_G < 20~ 0,
AGE_G >= 20~ 1,
AGE_G < 60~ 1,
AGE_G >= 60~ 2)) %>%
mutate(AGE_G = factor(AGE_G, levels = c(0,1,2), labels = c("junior","adult" ,"senior")))
